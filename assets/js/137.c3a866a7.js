(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{343:function(a,s,t){"use strict";t.r(s);var e=t(2),n=Object(e.a)({},function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"setup-komodo-notary-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setup-komodo-notary-node","aria-hidden":"true"}},[a._v("#")]),a._v(" Setup Komodo Notary Node")]),a._v(" "),t("h2",{attrs:{id:"komodo-notary-nodes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#komodo-notary-nodes","aria-hidden":"true"}},[a._v("#")]),a._v(" Komodo Notary Nodes")]),a._v(" "),t("h3",{attrs:{id:"note"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#note","aria-hidden":"true"}},[a._v("#")]),a._v(" Note")]),a._v(" "),t("p",[a._v("This is still in "),t("em",[a._v("BETA")]),a._v(" phase. This is to give you a good understanding on building a Komodo Notary Node. It is possible that some commands could be deprecated by the time you read it.")]),a._v(" "),t("p",[a._v("If you have any problems, please join "),t("code",[a._v("#notarynode")]),a._v(" on the "),t("a",{attrs:{href:"https://komodoplatform.com/discord",target:"_blank",rel:"noopener noreferrer"}},[a._v("Komodo Discord"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"requirements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requirements","aria-hidden":"true"}},[a._v("#")]),a._v(" Requirements")]),a._v(" "),t("h3",{attrs:{id:"hardware"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hardware","aria-hidden":"true"}},[a._v("#")]),a._v(" Hardware")]),a._v(" "),t("p",[a._v("Komodo currently only works on Linux. To setup Komodo Notary Node be sure you have a good solid server with the following requirements:")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("CPU: A good CPU (Xeon/i7)")])]),a._v(" "),t("li",[t("p",[a._v("RAM: 64GB")])]),a._v(" "),t("li",[t("p",[a._v("Disk: 500GB SSD")])]),a._v(" "),t("li",[t("p",[a._v("Bandwidth: 100Mbps")])])]),a._v(" "),t("h3",{attrs:{id:"operating-system"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#operating-system","aria-hidden":"true"}},[a._v("#")]),a._v(" Operating System")]),a._v(" "),t("p",[a._v("Debian/Ubuntu x64 LTS minimal installation with Openssh server. "),t("em",[a._v("This tutorial has been successfully tested with 14.04 and 16.04")]),a._v(".")]),a._v(" "),t("h3",{attrs:{id:"security"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#security","aria-hidden":"true"}},[a._v("#")]),a._v(" Security")]),a._v(" "),t("p",[t("em",[a._v("Before doing anything further, please ensure that your server is secure.")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Update the Operating System: "),t("code",[a._v("sudo apt-get -y update && sudo apt-get -y upgrade")])])]),a._v(" "),t("li",[t("p",[a._v("Install "),t("a",{attrs:{href:"https://www.digitalocean.com/community/tutorials/how-to-protect-ssh-with-fail2ban-on-ubuntu-14-04",target:"_blank",rel:"noopener noreferrer"}},[a._v("Fail2ban"),t("OutboundLink")],1),a._v(".")])]),a._v(" "),t("li",[t("p",[a._v("Create an unprivileged user and "),t("a",{attrs:{href:"https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-16-04",target:"_blank",rel:"noopener noreferrer"}},[a._v("install a SSH key"),t("OutboundLink")],1)])]),a._v(" "),t("li",[t("p",[a._v("Please run processes as an unprivileged user and use sudo where necessary")])])]),a._v(" "),t("h3",{attrs:{id:"bitcoin-funded-address"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bitcoin-funded-address","aria-hidden":"true"}},[a._v("#")]),a._v(" Bitcoin funded Address")]),a._v(" "),t("p",[a._v("You'll also need to fund the bitcoin address used with notary node.")]),a._v(" "),t("p",[a._v("Each notary node when notarise a block is currently set to use 0.0001 BTC. So, it is best to put some BTC to it if you are participating in testnet of Komodo Notary Nodes.")]),a._v(" "),t("p",[a._v("Example:")]),a._v(" "),t("p",[t("code",[a._v("0.0001 \\* aprox. 144 (btc blocks per day) = aprox. 0.0144")])]),a._v(" "),t("h2",{attrs:{id:"get-started"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-started","aria-hidden":"true"}},[a._v("#")]),a._v(" Get Started")]),a._v(" "),t("p",[a._v("Log in as the user you made earlier ("),t("code",[a._v("ssh user@ip_address_of_server")]),a._v(")")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" update\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" upgrade "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("and say Y when it wants to upgrade stuff"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("The following packages are needed:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool ncurses-dev "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("unzip")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" python zlib1g-dev "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" bsdmainutils automake libboost-all-dev libssl-dev libprotobuf-dev protobuf-compiler libqrencode-dev libdb++-dev ntp ntpdate "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" software-properties-common "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" libevent-dev libcurl4-gnutls-dev cmake clang libsodium-dev\n")])])]),t("h3",{attrs:{id:"install-nanomsg"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-nanomsg","aria-hidden":"true"}},[a._v("#")]),a._v(" Install "),t("code",[a._v("nanomsg")])]),a._v(" "),t("p",[a._v("Libnanomsg needs to be installed.")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/nanomsg/nanomsg\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" nanomsg\ncmake "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v(".")]),a._v(" -DNN_TESTS"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("OFF -DNN_ENABLE_DOC"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("OFF\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" -j2\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ldconfig\n")])])]),t("h3",{attrs:{id:"compiling-bitcoind"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compiling-bitcoind","aria-hidden":"true"}},[a._v("#")]),a._v(" Compiling "),t("code",[a._v("bitcoind")])]),a._v(" "),t("p",[a._v("Let us first compile Bitcoind, because it takes some time to sync it all up (around 12 hours)")]),a._v(" "),t("h5",{attrs:{id:"clone-bitcoin-source-code-and-checkout-version-16-x"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#clone-bitcoin-source-code-and-checkout-version-16-x","aria-hidden":"true"}},[a._v("#")]),a._v(" Clone Bitcoin source-code and checkout version 16.x")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/bitcoin/bitcoin\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" bitcoin\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout 0.16\n")])])]),t("h5",{attrs:{id:"create-a-build-script-called-build-sh-inside-the-bitcoin-dir-for-easy-compiling-and-put-the-contents-below-in-the-script"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-a-build-script-called-build-sh-inside-the-bitcoin-dir-for-easy-compiling-and-put-the-contents-below-in-the-script","aria-hidden":"true"}},[a._v("#")]),a._v(" Create a build script called "),t("code",[a._v("build.sh")]),a._v(" inside the "),t("code",[a._v("bitcoin")]),a._v(" dir for easy compiling and put the contents below in the script")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/bin/bash")]),a._v("\nberkeleydb "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    BITCOIN_ROOT"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("pwd")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n    BITCOIN_PREFIX"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${BITCOIN_ROOT}")]),a._v('/db4"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BITCOIN_PREFIX")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" -N "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef db-4.8.30.NC.tar.gz'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" sha256sum -c\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xzvf db-4.8.30.NC.tar.gz\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" db-4.8.30.NC/build_unix/\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/dist/configure -enable-cxx -disable-shared -with-pic -prefix"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BITCOIN_PREFIX")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BITCOIN_ROOT")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\nbuildBITCOIN "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" clean\n    ./autogen.sh\n    ./configure LDFLAGS"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-L'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${BITCOIN_PREFIX}")]),a._v('/lib/"')]),a._v(" CPPFLAGS"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-I'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${BITCOIN_PREFIX}")]),a._v('/include/"')]),a._v(" --with-gui"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("no --disable-tests --disable-bench --without-miniupnpc --enable-experimental-asm --enable-static --disable-shared\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" -j"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("nproc"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/bitcoin\nberkeleydb\nbuildBITCOIN\n")])])]),t("h5",{attrs:{id:"make-the-script-executable-and-run-the-script"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#make-the-script-executable-and-run-the-script","aria-hidden":"true"}},[a._v("#")]),a._v(" Make the script executable and run the script")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x build.sh\n./build.sh\n")])])]),t("h5",{attrs:{id:"symlink-the-binaries"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#symlink-the-binaries","aria-hidden":"true"}},[a._v("#")]),a._v(" Symlink the binaries")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -sf /home/"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$USER")]),a._v("/bitcoin/src/bitcoin-cli /usr/local/bin/bitcoin-cli\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -sf /home/"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$USER")]),a._v("/bitcoin/src/bitcoind /usr/local/bin/bitcoind\n")])])]),t("p",[a._v("Let's create folder "),t("code",[a._v(".bitcoin")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" .bitcoin\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" .bitcoin\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" bitcoin.conf\n")])])]),t("p",[a._v("Paste this in your "),t("code",[a._v("bitcoin.conf")]),a._v(" (replace rpcuser and rpcpassword)")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("server"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1\ndaemon"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1\ntxindex"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1\nrpcuser"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("bitcoinrpc\nrpcpassword"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("password\nbind"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("127.0.0.1\nrpcbind"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("127.0.0.1\n")])])]),t("p",[a._v("secure the "),t("code",[a._v("bitcoin.conf")]),a._v(" file")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" 600 ~/.bitcoin/bitcoin.conf\n")])])]),t("p",[a._v("Start Bitcoind")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("bitcoind -daemon\n")])])]),t("p",[a._v("check to see if it's downloading the blocks")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("bitcoin-cli getblockchaininfo\n")])])]),t("p",[a._v('This takes some time depending your internet connection. Let it run in the background. Now it is time to install Komodo. Follow each line step by step and ignore the "libgmp headers missing" at some point!')]),a._v(" "),t("h3",{attrs:{id:"installing-komodo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installing-komodo","aria-hidden":"true"}},[a._v("#")]),a._v(" Installing Komodo")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/jl777/komodo\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" komodo\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout dev\n./zcutil/fetch-params.sh\n")])])]),t("p",[a._v("-j8 uses 8 threads - replace 8 with number of threads you want to use or "),t("code",[a._v("nproc")]),a._v(" variable")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("./zcutil/build.sh -j"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("nproc"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),t("p",[a._v("This can take some time.")]),a._v(" "),t("h3",{attrs:{id:"when-it-is-finished-let-s-create-komodo-conf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#when-it-is-finished-let-s-create-komodo-conf","aria-hidden":"true"}},[a._v("#")]),a._v(" When it is finished, let's create "),t("code",[a._v("komodo.conf")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" .komodo\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" .komodo\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" komodo.conf\n")])])]),t("p",[a._v("Add the following lines to the komodo.conf file (replace rpcuser and rpcpassword)")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("rpcuser"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("usernameChangeItToSomethingSecure\nrpcpassword"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("passwordChangeItToSomethingSecure\ntxindex"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1\nserver"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1\ndaemon"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1\nrpcworkqueue"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("256\n")])])]),t("p",[a._v("Now let's start the Komodo daemon. Use "),t("code",[a._v("CTRL-C")]),a._v(" to get out when you miss your cursor")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/komodo/src\n./komodod "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n")])])]),t("h3",{attrs:{id:"komodo-is-now-performing-the-initial-blockchain-download"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#komodo-is-now-performing-the-initial-blockchain-download","aria-hidden":"true"}},[a._v("#")]),a._v(" Komodo is now performing the initial blockchain download")]),a._v(" "),t("p",[a._v("Here are some additional commands which will be handy in the future")]),a._v(" "),t("p",[a._v("This will get the stats:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("./komodo-cli getinfo\n")])])]),t("p",[a._v("To stop the daemon:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("./komodo-cli stop\n")])])]),t("p",[a._v("To view komodod output (very handy):")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tail")]),a._v(" -f ~/.komodo/debug.log\n")])])]),t("p",[a._v("To view all commands")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("./komodo-cli "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("help")]),a._v("\n")])])]),t("h2",{attrs:{id:"setting-up-supernet-iguana"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-supernet-iguana","aria-hidden":"true"}},[a._v("#")]),a._v(" Setting up SuperNET/Iguana")]),a._v(" "),t("p",[a._v("Personally I prefer to have a full downloaded Bitcoin blockchain. But be sure you stop Bitcoind when you are going to install SuperNET/Iguana!!")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/jl777/SuperNET\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" SuperNET/iguana\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout dev\n./m_LP\n")])])]),t("p",[a._v("Temporary: start "),t("code",[a._v("~/SuperNET/agents/iguana")]),a._v(" just for setup, not for normal NN use, i.e., one time to get the pubkey")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("~/SuperNET/agents/iguana\n")])])]),t("p",[a._v("Open up a new SSH window and login to your server")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/SuperNET/iguana/coins\n./basilisk.old\n")])])]),t("p",[a._v("if you receive this error: "),t("code",[a._v('"ERROR BINDING PORT.8332')]),a._v(' this is normal tcp timeout, unless another process is using port" then you were already running Bitcoind in the background. Stop Iguana and Bitcoind and start the above again.')]),a._v(" "),t("p",[a._v("Create an iguana wallet with encryptwallet and importprivkey into both komodod and bitcoind using the KMDwif and BTCwif in the encryptwallet result once you have them installed and running. Put in a really good password and be sure you keep the slash at the end.")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" --url "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"http://127.0.0.1:7778"')]),a._v(" --data "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{\\"agent\\":\\"bitcoinrpc\\",\\"method\\":\\"encryptwallet\\",\\"passphrase\\":\\"insert very secure password here\\"}"')]),a._v("\n")])])]),t("p",[a._v("Goto to "),t("code",[a._v("~/SuperNET/iguana")]),a._v(' and create the executable file "wp"')]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/SuperNET/iguana\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" wp\n")])])]),t("p",[a._v("Paste this into your wp file and be sure you set the password that you have made above (watch out for the slash at the end)")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" --url "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"http://127.0.0.1:7778"')]),a._v(" --data "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{\\"method\\":\\"walletpassphrase\\",\\"params\\":[\\"same passphrase as above\\", 9999999]}"')]),a._v("\n")])])]),t("p",[a._v("Make it executable")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x wp\n")])])]),t("p",[a._v("Run the "),t("code",[a._v("wp")]),a._v(" script file")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("./wp\n")])])]),t("p",[a._v("Output example below")]),a._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"pubkey"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"7fa4cbfb3c33981b3015c6d08895fe5769ead9cbfae4b89afab681ab0db15f43"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"RS"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"NXT-KL8J-EFN2-2BXJ-BUUTB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"NXT"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"10729644020227164368"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"btcpubkey"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"03a47c429b6fd83dc9687ba409ee6f34823094b97bad4c0f4f60649c55bbdf497b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"rmd160"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"58e7000f7d6e4d48e6bf46b1cdb2ad5842232411"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"BTCD"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"RHPGGaJML2Ts7TLz6WasK3xSX3XKuKsHeD"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"BTC"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1975C4R4jCfJ3SyndLbkDXdEkn4jJibuqK"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"result"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"success"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"handle"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"persistent"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"7fa4cbfb3c33981b3015c6d08895fe5769ead9cbfae4b89afab681ab0db15f43"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"status"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"unlocked"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"duration"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3600")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"tag"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"14543391360640231809"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("In the output of the executed file you will see a lot of data. Get the "),t("strong",[a._v("btcpubkey (not the pubkey!)")]),a._v(" ("),t("code",[a._v("03a47c429b6fd83dc9687ba409ee6f34823094b97bad4c0f4f60649c55bbdf497b")]),a._v(") and send it to Kolo. It is strongly recommended to write the above info somewhere and save it.")]),a._v(" "),t("p",[a._v("Create a text file "),t("code",[a._v("~/SuperNET/iguana/userhome.txt")]),a._v(" with just this path in it")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" ~/SuperNET/iguana/userhome.txt\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# and put your home folder in it. Mostly it is home/username (without the front and back slash!)")]),a._v("\n")])])]),t("p",[a._v("Copy these files then change them from using port 7778 to 7776")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" ~/SuperNET/iguana/coins/btc ~/SuperNET/iguana/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" ~/SuperNET/iguana/coins/kmd ~/SuperNET/iguana/\n")])])]),t("p",[a._v("Create the wallet passphrase (unlocking) api call at "),t("code",[a._v("~/SuperNET/iguana/wp_7776")]),a._v(" - this gets called at notary start up")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" --url "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"http://127.0.0.1:7776"')]),a._v(" --data "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{\\"method\\":\\"walletpassphrase\\",\\"params\\":[\\"YOUR VERY SECURE PASSPHRASE\\", 9999999]}"')]),a._v("\n")])])]),t("p",[a._v("Now create a new file for the btcpubkey. Enter it as: pubkey=xxxxxxxxxxxxxxxxxxxxxxx")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" pubkey.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" ~/SuperNET/iguana/pubkey.txt ~/komodo/src/pubkey.txt\n")])])]),t("p",[a._v("We have installed all the things we needed, but we have some configurations to do. Komodo is now mining with his own komodo pubkey, but we have to integrate some stuff into komodo. Let's hope you have copied and pasted the part where you got your btcpubkey etc. somewhere. Bring it back up.")]),a._v(" "),t("h2",{attrs:{id:"final-steps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#final-steps","aria-hidden":"true"}},[a._v("#")]),a._v(" Final Steps")]),a._v(" "),t("p",[a._v("While komodo is still mining we can send commands to it. We need to import the privkey of your BTCD address into Komodo. Find your BTCDwif key (do NOT mistake it with your BTCwif). Now let's import it.")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" komodo\n./src/komodo-cli importprivkey BTCDwif\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# replace BTCDwif with the key you received earlier (like: UvCbPGo2B5QHKgMN5KFRz10sMzbTSXunRTLB9utqGhNFUZrJrEWa)")]),a._v("\n")])])]),t("p",[a._v("To check to see if it imported successfully run")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("./src/komodo-cli validateaddress btcdaddress\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# replace btcdaddress with the address you received earlier (like: RVxtoUT0CXbC1LrtltNAf9yR5yWnFnSPQh)")]),a._v("\n")])])]),t("p",[a._v("if "),t("code",[a._v("ismine: true")]),a._v(" it has been successfully imported")]),a._v(" "),t("p",[a._v("We have successfully imported the BTCD address into Komodo.")]),a._v(" "),t("p",[a._v("Now we have to integrate your BTC privkey into your Bitcoin installation. Be sure Bitcoind is running at this point!")]),a._v(" "),t("p",[a._v("Import BTC Priv Key (BTCwif)")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("bitcoin-cli importprivkey BTCwif "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# replace BTCwif with the key you received earlier (like: L3Qm5bB3frS2rdMNtmZrEMReRvYKMReALwxMaf00oz9YahvZaB4a)")]),a._v("\n")])])]),t("p",[a._v("Run the following to confirm it has imported properly.")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("bitcoin-cli validateaddress yourbtcaddress\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# replace yourbtcaddress with the address you received earlier (like: 1MghixZrbhncwLGTIiP3ZdeDKhzBaPUKKu)")]),a._v("\n")])])]),t("p",[a._v("if "),t("code",[a._v("ismine: true")]),a._v(" it has been successfully imported")]),a._v(" "),t("h3",{attrs:{id:"import-private-key-into-assetchains"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#import-private-key-into-assetchains","aria-hidden":"true"}},[a._v("#")]),a._v(" Import private key into assetchains")]),a._v(" "),t("p",[a._v("Import your KMD/BTCD WIF into all assetchains")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" komodo/src\n./assetchains\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# wait for the blockchain to fully, will take a long time")]),a._v("\n./fiat-cli importprivkey BTCDwif\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# replace BTCDwif with the key you received earlier (like: UvCbPGo2B5QHKgMN5KFRz10sMzbTSXunRTLB9utqGhNFUZrJrEWa)")]),a._v("\n")])])]),t("p",[a._v("This will trigger blockchain rescan and may take a very long time. Wait for the process to be finished.")]),a._v(" "),t("h3",{attrs:{id:"install-chips"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-chips","aria-hidden":"true"}},[a._v("#")]),a._v(" Install Chips")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" update "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" software-properties-common autoconf "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" build-essential libtool libprotobuf-c-dev libgmp-dev libsqlite3-dev python python3 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" jq libevent-dev pkg-config libssl-dev libcurl4-gnutls-dev cmake libboost-all-dev -y\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/jl777/chips3.git\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" chips3/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout dev\n")])])]),t("p",[a._v("Build Berkeley DB 4.8")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("CHIPS_ROOT"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("pwd")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\nBDB_PREFIX"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CHIPS_ROOT}")]),a._v('/db4"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BDB_PREFIX")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef db-4.8.30.NC.tar.gz'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" sha256sum -c\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xzvf db-4.8.30.NC.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" db-4.8.30.NC/build_unix/\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/dist/configure -enable-cxx -disable-shared -with-pic -prefix"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BDB_PREFIX")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" -j"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("nproc"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])])]),t("p",[a._v("Build Chips")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/chips3\n./autogen.sh\n./configure LDFLAGS"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-L'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${BDB_PREFIX}")]),a._v('/lib/"')]),a._v(" CPPFLAGS"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-I'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${BDB_PREFIX}")]),a._v('/include/"')]),a._v(" -without-gui -without-miniupnpc --disable-tests --disable-bench --with-gui"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("no\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" -j"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("nproc"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),t("p",[a._v("Create "),t("code",[a._v("chips.conf")]),a._v(" file with random username, password, txindex and daemon turned on:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" .chips\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" .chips/chips.conf\n")])])]),t("p",[a._v("Add the following lines into your "),t("code",[a._v("chips.conf")]),a._v(" file")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("rpcuser"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("chipsuser\nrpcpassword"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("passworddrowssap\ntxindex"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1\ndaemon"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1\naddnode"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("5.9.253.195\naddnode"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("74.208.210.191\n")])])]),t("p",[a._v("Symlinking the binaries")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -sf /home/"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$USER")]),a._v("/chips3/src/chips-cli /usr/local/bin/chips-cli\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -sf /home/"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$USER")]),a._v("/chips3/src/chipsd /usr/local/bin/chipsd\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/chips-cli\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/chipsd\n")])])]),t("p",[a._v("Run!")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("chipsd\n")])])]),t("p",[a._v("Check")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("chips-cli getinfo\n")])])]),t("p",[a._v("Import privkey")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("chips-cli importprivkey BTCDwif\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# replace BTCDwif with the key you received earlier (like: UvCbPGo2B5QHKgMN5KFRz10sMzbTSXunRTLB9utqGhNFUZrJrEWa)")]),a._v("\n")])])]),t("h3",{attrs:{id:"install-gamecredits"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-gamecredits","aria-hidden":"true"}},[a._v("#")]),a._v(" Install GameCredits")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" update "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" software-properties-common autoconf "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" build-essential libtool libprotobuf-c-dev libgmp-dev libsqlite3-dev python python3 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" jq libevent-dev pkg-config libssl-dev libcurl4-gnutls-dev cmake -y\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/gamecredits-project/GameCredits\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" GameCredits/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout master\n")])])]),t("p",[a._v("In Debian9 you might need to do "),t("code",[a._v("sudo apt-get install libssl1.0-dev")]),a._v(" or compile the openssl and place it in the Gamecredits folder and point "),t("code",[a._v("gamecreditsd")]),a._v(" at it, so that it wouldn't interfere with other coin daemons.")]),a._v(" "),t("p",[a._v("Build Berkeley DB 4.8")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("GAME_ROOT"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("pwd")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\nBDB_PREFIX"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GAME_ROOT}")]),a._v('/db4"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BDB_PREFIX")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef db-4.8.30.NC.tar.gz'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" sha256sum -c\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xzvf db-4.8.30.NC.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" db-4.8.30.NC/build_unix/\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/dist/configure -enable-cxx -disable-shared -with-pic -prefix"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BDB_PREFIX")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" -j"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("nproc"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])])]),t("p",[a._v("Build GameCredits")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/GameCredits\n./autogen.sh\n./configure LDFLAGS"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-L'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${BDB_PREFIX}")]),a._v('/lib/"')]),a._v(" CPPFLAGS"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-I'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${BDB_PREFIX}")]),a._v('/include/"')]),a._v(" -without-gui -without-miniupnpc --disable-tests --disable-bench --with-gui"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("no\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" -j"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("nproc"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),t("p",[a._v("Create "),t("code",[a._v("gamecredits.conf")]),a._v(" file with random username, password, txindex and daemon turned on:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" .gamecredits\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" .gamecredits/gamecredits.conf\n")])])]),t("p",[a._v("Add the following lines into your "),t("code",[a._v("gamecredits.conf")]),a._v(" file")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("rpcuser"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("gamecreditsuser\nrpcpassword"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("passworddrowssap\ntxindex"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1\ndaemon"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1\nbind"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("127.0.0.1\nrpcbind"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("127.0.0.1\naddnode"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("x.x.x.x\naddnode"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("y.y.y.y\n")])])]),t("p",[a._v("Symlinking the binaries")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -sf /home/"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$USER")]),a._v("/GameCredits/src/gamecredits-cli /usr/local/bin/gamecredits-cli\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -sf /home/"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$USER")]),a._v("/GameCredits/src/gamecreditsd /usr/local/bin/gamecreditsd\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/gamecredits-cli\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/gamecreditsd\n")])])]),t("p",[a._v("Run!")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("gamecreditsd\n")])])]),t("p",[a._v("Check")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("gamecredits-cli getinfo\n")])])]),t("p",[a._v("Import privkey")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("gamecredits-cli importprivkey GAMEwif\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# replace GAMEwif with the key you received earlier (like: UvCbPGo2B5QHKgMN5KFRz10sMzbTSXunRTLB9utqGhNFUZrJrEWa)")]),a._v("\n")])])]),t("p",[a._v("Now we need to chain everything together. Pondsea came up with a nice handy little script. So let's start")]),a._v(" "),t("p",[a._v("Create a script file at "),t("code",[a._v("/home/username/")]),a._v(" and name it start")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" start\n")])])]),t("p",[a._v("Paste into file and replace the pubkey with your "),t("code",[a._v("btcpubkey")]),a._v(" and save it.")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("bitcoind "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\nchipsd -pubkey"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0225aa6f6f19e543180b31153d9e6d55d41bc7ec2ba191fd29f19a2f973544e29d"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\ngamecreditsd -pubkey"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0225aa6f6f19e543180b31153d9e6d55d41bc7ec2ba191fd29f19a2f973544e29d"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" komodo\n./src/komodod -gen -genproclimit"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1 -notary -pubkey"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0225aa6f6f19e543180b31153d9e6d55d41bc7ec2ba191fd29f19a2f973544e29d"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n")])])]),t("p",[a._v("Make it executable")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x start\n")])])]),t("p",[a._v("This should bind all the tech stuff together, but not before we make some tweaking to the system. Hagbard came up with the following tweak.")]),a._v(" "),t("h2",{attrs:{id:"set-ulimit-parameters-on-ubuntu-permanent"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-ulimit-parameters-on-ubuntu-permanent","aria-hidden":"true"}},[a._v("#")]),a._v(" Set "),t("code",[a._v("ulimit")]),a._v(" parameters on Ubuntu permanent")]),a._v(" "),t("p",[a._v("By default the number of open files per user in Ubuntu is 1024. In our case this number is too small so you have to increase it.")]),a._v(" "),t("p",[a._v("This is done with the "),t("code",[a._v("ulimit")]),a._v(" command:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ulimit")]),a._v(" -a   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# see all the kernel parameters")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ulimit")]),a._v(" -n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# see the number of open files")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ulimit")]),a._v(" -n 1000000  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  set the number open files to 1000000")]),a._v("\n")])])]),t("p",[a._v("The problem with this way is that the "),t("code",[a._v("ulimit")]),a._v(" parameter is only set currently for this command terminal and user. This means that after a reboot you’ll need to set the parameter again. Do the following to set it permanent:")]),a._v(" "),t("p",[a._v("edit "),t("code",[a._v("/etc/security/limits.conf")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" /etc/security/limits.conf\n")])])]),t("p",[a._v("add these lines:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("* soft nofile 1000000\n* hard nofile 1000000\n")])])]),t("p",[a._v("save and close file")]),a._v(" "),t("p",[a._v("edit "),t("code",[a._v("/etc/pam.d/common-session")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" /etc/pam.d/common-session\n")])])]),t("p",[a._v("add this line:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("session required pam_limits.so\n")])])]),t("p",[a._v("save and close file")]),a._v(" "),t("p",[a._v("reboot & check:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ulimit")]),a._v(" -n\n")])])]),t("p",[a._v("We are done. Now let's reboot the server and chain everything together with the start script and m_notary")]),a._v(" "),t("p",[a._v("When the server is rebooted and you are logged in as user (and lands into your home dir)")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("./start\nCTRL-C\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" komodo/src\n./assetchains\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# and wait 15 minutes before you go to the next step")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/SuperNET/iguana\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout dev "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" ./m_notary "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# wait until you see `INIT with 64 notaries`")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/komodo/src "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" ./dpowassets\n")])])]),t("p",[a._v("We are done! If you have given the btcpubkey to James and he has added it to the "),t("code",[a._v("notaries.h")]),a._v(" files located ("),t("a",{attrs:{href:"https://github.com/jl777/SuperNET/blob/master/iguana/notaries.h",target:"_blank",rel:"noopener noreferrer"}},[a._v("jl777/SuperNET:iguana/notaries.h@master"),t("OutboundLink")],1),a._v(") everything should work now.")]),a._v(" "),t("h2",{attrs:{id:"n00b-q-a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#n00b-q-a","aria-hidden":"true"}},[a._v("#")]),a._v(" N00b Q&A")]),a._v(" "),t("ul",[t("li",[a._v('I receive "null utxo array size" as output when i start script start2 You have to fund your BTC wallet with 0.01btc. Send your BTC address to James and he will fund it.')]),a._v(" "),t("li",[a._v("If I did not initially run bitcoind or komodod with txindex=1, then should I add that to .conf and rescan blockchain or something? Yes, you need to launch it with -reindex in the command line arg (like bitcoind -reindex &)")]),a._v(" "),t("li",[a._v("When i start Iguana, i see a message that my IP is dead. Is it? It isn't 😉 just start de start2 script and it's alive.")]),a._v(" "),t("li",[a._v("When i log out of my server and log back in again after i while, the Iguana proces has been killed, why? I do not know why, i had this problem myself. Contact BadAss for a solution for this.")]),a._v(" "),t("li",[a._v("I get all kinds of strange warnings in the output of start2. Did i broke something? Rule nr.1, if you do not see any ERROR's, let it run. James is busy with debugging the code. Do you see warnings, then let it run. If you don't trust it, restart it again.")]),a._v(" "),t("li",[a._v("My Iguana process gets killed by a buffer overflow error. Do i have to start over again? No, just go to ~/SuperNET and do a git pull.")])])])},[],!1,null,null,null);s.default=n.exports}}]);