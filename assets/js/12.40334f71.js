(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{228:function(e,a,t){"use strict";t.r(a);var s=t(2),r=Object(s.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"create-and-test-an-asset-chain-using-a-single-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-and-test-an-asset-chain-using-a-single-node","aria-hidden":"true"}},[e._v("#")]),e._v(" Create and test an Asset Chain using a Single Node")]),e._v(" "),t("p",[e._v("Normally at least two different nodes are required to setup and "),t("router-link",{attrs:{to:"/basic-docs/installations/creating-asset-chains.html"}},[e._v("create an Asset Chain")]),e._v(".")],1),e._v(" "),t("p",[e._v("If you are in a situation where you have control over a single computer or have access to two machines but they aren't able to connect to each other, you can create an assetchain by running two daemons with slightly different configurations on the same computer.")]),e._v(" "),t("p",[e._v("Get "),t("code",[e._v("komodod")]),e._v(" and "),t("code",[e._v("komodo-cli")]),e._v(" by following the instructions here: "),t("router-link",{attrs:{to:"/basic-docs/installations/basic-instructions.html#installing-basic-komodo-software"}},[e._v("Installing Basic Komodo Software")])],1),e._v(" "),t("h2",{attrs:{id:"launch-the-first-daemon"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#launch-the-first-daemon","aria-hidden":"true"}},[e._v("#")]),e._v(" Launch the First daemon")]),e._v(" "),t("p",[e._v("Select the assetchain parameters applicable and launch the daemon from the list here: "),t("router-link",{attrs:{to:"/basic-docs/installations/asset-chain-parameters.html"}},[e._v("Custom Asset Chain Parameters")])],1),e._v(" "),t("p",[e._v("Here we are running a very simple configuration:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./komodod -ac_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("HELLOWORLD -ac_supply"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("777777\n")])])]),t("p",[e._v("In the output, take note of the string that starts with "),t("code",[e._v(">>>>>>>>>>")])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" HELLOWORLD: p2p.14165 rpc.14166 magic.01362c2a 20327466 777777 coins\n")])])]),t("p",[e._v("The default "),t("code",[e._v("p2p")]),e._v(" and "),t("code",[e._v("rpc")]),e._v(" ports of a chain with the above selected parameters are "),t("code",[e._v("14165")]),e._v(" and "),t("code",[e._v("14166")]),e._v(" respectively.")]),e._v(" "),t("p",[e._v("To interact with the first daemon, use the "),t("code",[e._v("komodo-cli")]),e._v(" command:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./komodo-cli -ac_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("HELLOWORLD getinfo\n")])])]),t("h2",{attrs:{id:"create-the-data-directory-for-the-second-daemon"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-the-data-directory-for-the-second-daemon","aria-hidden":"true"}},[e._v("#")]),e._v(" Create the data directory for the Second daemon")]),e._v(" "),t("p",[e._v("Create a directory in any location of your machine. In this guide we will use a directory named "),t("code",[e._v("coinData")]),e._v(" in the user's Home directory:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" ~/coinData\n")])])]),t("p",[e._v("Then create the data directory for the second daemon:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" ~/coinData/HELLOWORLD\n")])])]),t("p",[e._v("Copy the "),t("code",[e._v(".conf")]),e._v(" file created for the first daemon to this new data directory")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" ~/.komodo/HELLOWORLD/HELLOWORLD.conf ~/coinData/HELLOWORLD/\n")])])]),t("p",[e._v("Change the values of "),t("code",[e._v("rpcuser")]),e._v(", "),t("code",[e._v("rpcpassword")]),e._v(", and "),t("code",[e._v("rpcport")]),e._v(" in the file "),t("code",[e._v("~/coinData/HELLOWORLD/HELLOWORLD.conf")])]),e._v(" "),t("p",[e._v("Add a new line "),t("code",[e._v("port=<desired_p2p_port>")]),e._v(" to the above file. The "),t("code",[e._v("port")]),e._v(" and "),t("code",[e._v("rpcport")]),e._v(" must be distinct from the ports found in the previous step where we ran the first daemon.")]),e._v(" "),t("h2",{attrs:{id:"launch-the-second-daemon"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#launch-the-second-daemon","aria-hidden":"true"}},[e._v("#")]),e._v(" Launch the Second daemon")]),e._v(" "),t("p",[e._v("When launching the second daemon,we use the same parameters as the first deamon, but specify the data directory it must use and the p2p connection to the first node using "),t("code",[e._v("-datadir")]),e._v(" and "),t("code",[e._v("-addnode")]),e._v(" respectively.")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./komodod -ac_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("HELLOWORLD -ac_supply"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("777777 -datadir"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/home/"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("USERNAME"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("/coinData/HELLOWORLD -addnode"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("localhost\n")])])]),t("p",[e._v("Replace "),t("code",[e._v("<USERNAME>")]),e._v(" with the USERNAME of the account logged in. It can be found using "),t("code",[e._v("echo $USER")])]),e._v(" "),t("p",[e._v("To interact with the second daemon, add the "),t("code",[e._v("-datadir")]),e._v(" parameter to the "),t("code",[e._v("komodo-cli")]),e._v(" command:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./komodo-cli -ac_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("HELLOWORLD -datadir"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/home/"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("USERNAME"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("/coinData/HELLOWORLD getinfo\n")])])]),t("p",[e._v("After launching the second daemon, "),t("code",[e._v("getinfo")]),e._v(" to either of the daemons should report "),t("code",[e._v('"connections":1')])]),e._v(" "),t("h2",{attrs:{id:"using-curl-to-interact-with-the-daemons"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#using-curl-to-interact-with-the-daemons","aria-hidden":"true"}},[e._v("#")]),e._v(" Using "),t("code",[e._v("curl")]),e._v(" to interact with the daemons")]),e._v(" "),t("p",[e._v("To issue a "),t("code",[e._v("getinfo")]),e._v(" call, execute:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -s --user "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("rpcuser"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("rpcpassword"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --data-binary "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'{"jsonrpc": "1.0", "id": "curltest", "method": "getinfo", "params": []}\'')]),e._v(" -H "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'content-type: text/plain;'")]),e._v(" http://127.0.0.1:"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("rpcport"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("/\n")])])]),t("p",[e._v("Replace "),t("code",[e._v("<rpcuser>")]),e._v(","),t("code",[e._v("<rpcpassword>")]),e._v(","),t("code",[e._v("<rpcport>")]),e._v(" with the values from the "),t("code",[e._v(".conf")]),e._v(" file in the data directory corresponding to the daemon that needs to be queried.")]),e._v(" "),t("p",[e._v("Or "),t("code",[e._v("source")]),e._v(" the "),t("code",[e._v(".conf")]),e._v(" file before using the curl command. For example, for the first daemon:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("source")]),e._v(" ~/.komodo/HELLOWORLD/HELLOWORLD.conf\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -s --user "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$rpcuser")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$rpcpassword")]),e._v(" --data-binary "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'{"jsonrpc": "1.0", "id": "curltest", "method": "getinfo", "params": []}\'')]),e._v(" -H "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'content-type: text/plain;'")]),e._v(" http://127.0.0.1:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$rpcport")]),e._v("/\n")])])]),t("p",[t("code",[e._v("source")]),e._v(" the file: "),t("code",[e._v("~/coinData/HELLOWORLD/HELLOWORLD.conf")]),e._v(" to interact with the second daemon using curl.")])])},[],!1,null,null,null);a.default=r.exports}}]);